<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cosmus.resonos.mapper.TrackMapper">

  <resultMap id="Track" type="com.cosmus.resonos.domain.Track">
    <id property="id" column="id"/>
    <result property="title" column="title"/>
    <result property="duration" column="duration"/>
    <result property="genre" column="genre"/>
    <result property="streamingUrl" column="streaming_url"/>
    <result property="mvUrl" column="mv_url"/>
    <result property="albumId" column="album_id"/>
    <result property="artistId" column="artist_id"/>
    <result property="popularity" column="popularity"/>
    <result property="trackNo" column="track_no"/>
    <result property="artistName" column="artist_name"/>
    <result property="coverImage" column="cover_image"/>
    <result property="releaseDate" column="release_date"/>
  </resultMap>

  <select id="selectAll" resultMap="Track">
    SELECT * FROM track
  </select>

  <select id="mainNewList" resultMap="Track">
    SELECT t.*, ar.name AS artist_name, al.cover_image
    FROM track t
    LEFT JOIN artist ar ON t.artist_id = ar.id
    LEFT JOIN album al ON t.album_id = al.id
    ORDER BY t.id DESC
    LIMIT 12
  </select>

  <select id="newList" resultMap="Track">
    SELECT t.*, ar.name AS artist_name, al.cover_image, al.release_date
    FROM track t
    LEFT JOIN artist ar ON t.artist_id = ar.id
    LEFT JOIN album al ON t.album_id = al.id
    ORDER BY al.release_date DESC
    LIMIT #{index}, #{size}
  </select>

  <select id="count" resultType="long">
    SELECT COUNT(*)
    FROM track
  </select>

  <select id="selectById"  resultMap="Track">
    SELECT * FROM track WHERE id = #{id}
  </select>

  <insert id="insert" >
    INSERT INTO track
      (id, title, duration, genre, streaming_url, mv_url, album_id, artist_id, popularity, track_no)
    VALUES
      (#{id}, #{title}, #{duration}, #{genre}, #{streamingUrl}, #{mvUrl}, #{albumId}, #{artistId}, #{popularity}, #{trackNo})
  </insert>

  <update id="update" >
    UPDATE track
    SET title = #{title},
        duration = #{duration},
        genre = #{genre},
        streaming_url = #{streamingUrl},
        mv_url = #{mvUrl},
        album_id = #{albumId},
        artist_id = #{artistId},
        popularity = #{popularity},
        track_no = #{trackNo}
    WHERE id = #{id}
  </update>

  <delete id="delete" >
    DELETE FROM track WHERE id = #{id}
  </delete>

  <select id="list" resultMap="Track">
    SELECT * FROM track
    ORDER BY id DESC
  </select>

  <select id="exists" resultType="int" parameterType="string">
    SELECT COUNT(*) FROM track WHERE id = #{id}
  </select>

  <!-- artistId -->
  <!-- 아티스트 별 TOP 7 인기 트랙 -->
  <select id="selectTop7TracksByArtist"
          parameterType="string"
          resultType="Track">
      SELECT
          title,
          duration,
          id
      FROM track
      WHERE artist_id = #{artistId}
      ORDER BY popularity DESC
      LIMIT 7
  </select>

  <!-- 아티스트별 곡수 -->
  <select id="countTracksByArtist"
          parameterType="string"
          resultType="int">
      SELECT COUNT(*)
      FROM track
      WHERE artist_id = #{artistId}
  </select>

  <!-- trackId 같은 앨범 내 인기순 Top-5 트랙 -->
  <!-- (선택) 자기 자신 제외 -->
  <select id="findTop5TracksInSameAlbum"
          parameterType="string"
          resultType="Track">
    <![CDATA[
    SELECT t.*
    FROM   track t
    JOIN   track base ON base.id = #{trackId}
    WHERE  t.album_id = base.album_id
      AND  t.id <> #{trackId}
    ORDER BY t.popularity DESC
    LIMIT 5
    ]]>
  </select>

  <!-- trackId → 아티스트 이름 한 건 -->
  <select id="findArtistNameByTrackId"
          parameterType="string"
          resultType="string">
    SELECT ar.name
    FROM   artist ar
    JOIN   track  t ON t.artist_id = ar.id
    WHERE  t.id = #{trackId}
    LIMIT 1
  </select>

  <!-- 앨범아이디로 모든트랙 -->
  <select id="findTracksByAlbumId"
          parameterType="string"
          resultMap="Track">
    <![CDATA[
      SELECT *
      FROM   track
      WHERE  album_id = #{albumId}
      ORDER BY track_no ASC
    ]]>
  </select>
  <!-- 앨범아이디로 트랙중 인기 5 (리스트) -->
  <select id="findTop5TracksByAlbumId"
          parameterType="string"
          resultMap="Track">
    <![CDATA[
      SELECT *
      FROM   track
      WHERE  album_id = #{albumId}
      ORDER BY popularity DESC
      LIMIT 5
    ]]>
  </select>

  <!-- 앨범아이디로 트랙중 인기 1 (객체) -->
  <select id="findTopTrackByAlbumId"
          parameterType="string"
          resultMap="Track">
    <![CDATA[
      SELECT *
      FROM   track
      WHERE  album_id = #{albumId}
      ORDER BY popularity DESC
      LIMIT 1
    ]]>
  </select>

  <select id="searchList" resultMap="Track" parameterType="string">
    SELECT t.*, ar.name AS artist_name, al.cover_image
    FROM track t
    LEFT JOIN artist ar ON t.artist_id = ar.id
    LEFT JOIN album al ON t.album_id = al.id
    WHERE t.title LIKE CONCAT('%', #{keyword}, '%')
    LIMIT 12
  </select>

  <select id="allSearchList" resultMap="Track" parameterType="map">
    SELECT t.*, ar.name AS artist_name, al.cover_image
    FROM track t
    LEFT JOIN artist ar ON t.artist_id = ar.id
    LEFT JOIN album al ON t.album_id = al.id
    WHERE t.title LIKE CONCAT('%', #{keyword}, '%')
    LIMIT #{index}, #{size}
  </select>

  <select id="searchCount" resultType="long" parameterType="string">
    SELECT COUNT(*)
    FROM track
    WHERE title LIKE CONCAT('%', #{keyword}, '%')
  </select>
  
  <!-- 플레이 리스트 추가 -->
  <select id="addTrackList" resultMap="Track" parameterType="string">
    SELECT t.*, ar.name AS artist_name, al.cover_image
    FROM track t
      LEFT JOIN artist ar ON t.artist_id = ar.id
      LEFT JOIN album al ON t.album_id = al.id
    WHERE t.title LIKE CONCAT('%', #{keyword}, '%')
  </select>

</mapper>
