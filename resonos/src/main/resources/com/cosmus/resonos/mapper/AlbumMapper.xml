<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cosmus.resonos.mapper.AlbumMapper">

  <resultMap id="Album" type="com.cosmus.resonos.domain.Album">
    <id property="id" column="id"/>
    <result property="title" column="title"/>
    <result property="coverImage" column="cover_image"/>
    <result property="releaseDate" column="release_date"/>
    <result property="genre" column="genre"/>
    <result property="label" column="label"/>
    <result property="description" column="description"/>
    <result property="artistId" column="artist_id"/>
    <result property="artistName" column="artist_name"/>
  </resultMap>

  <select id="list" resultMap="Album">
    SELECT * FROM album
    ORDER BY release_date DESC
  </select>

  <select id="mainNewList" resultMap="Album">
    SELECT a.*, ar.name AS artist_name
    FROM album a
    LEFT JOIN artist ar ON a.artist_id = ar.id
    WHERE a.release_date >= DATE_SUB(CURDATE(), INTERVAL 14 DAY)
    ORDER BY a.release_date DESC, artist_name
    LIMIT 12
  </select>

  <select id="newList" resultMap="Album">
    SELECT a.*, ar.name AS artist_name
    FROM album a
    LEFT JOIN artist ar ON a.artist_id = ar.id
    WHERE a.release_date >= DATE_SUB(CURDATE(), INTERVAL 14 DAY)
    ORDER BY a.release_date DESC, artist_name
    LIMIT #{index}, #{size}
  </select>

  <select id="count" resultType="long">
    SELECT COUNT(*)
    FROM album
  </select>

  <select id="newCount" resultType="long">
    SELECT COUNT(*)
    FROM album
    WHERE release_date >= DATE_SUB(CURDATE(), INTERVAL 14 DAY)
  </select>

  <select id="select" resultMap="Album">
    SELECT * FROM album WHERE id = #{id}
  </select>

  <insert id="insert">
    INSERT INTO album (id, title, cover_image, release_date, genre, label, description, artist_id)
    VALUES (#{id}, #{title}, #{coverImage}, #{releaseDate}, #{genre}, #{label}, #{description}, #{artistId})
  </insert>

  <update id="update">
    UPDATE album
    SET title = #{title},
        cover_image = #{coverImage},
        release_date = #{releaseDate},
        genre = #{genre},
        label = #{label},
        description = #{description},
        artist_id = #{artistId},
        release_date = #{releaseDate}
    WHERE id = #{id}
  </update>

  <delete id="delete">
    DELETE FROM album WHERE id = #{id}
  </delete>

  <select id="exists" resultType="int" >
    SELECT COUNT(*) FROM album WHERE id = #{id}
  </select>

  <!-- 모든 앨범을 아티스트 ID로 조회 -->
  <!-- id 자료형에 맞게 string·long 등으로 -->
  <select id="findAlbumsByArtistId"
                
          resultMap="Album">
    SELECT a.*,
          ar.name AS artist_name
    FROM   album  a
    JOIN   artist ar ON a.artist_id = ar.id
    WHERE  a.artist_id = #{artistId}
    ORDER BY a.release_date DESC
  </select>

  <!-- trackId 앨범 객체 -->
  <select id="findAlbumByTrackId"
          
          resultType="Album">
    SELECT a.*
    FROM   album  a
    JOIN   track  t ON t.album_id = a.id
    WHERE  t.id = #{trackId}
  </select>
  
  <!-- artistId -->
  <!-- 아티스트의 앨범 수 -->
  <select id="countAlbumsByArtist"
          
          resultType="int">
      SELECT
          COUNT(*) 
      FROM album
      WHERE artist_id = #{artistId}
  </select>

  <select id="searchList" resultMap="Album" >
    SELECT a.*, ar.name AS artist_name
    FROM album a
    LEFT JOIN artist ar ON a.artist_id = ar.id
    WHERE title LIKE CONCAT('%', #{keyword}, '%')
    LIMIT 12
  </select>

  <select id="allSearchList" resultMap="Album" >
    SELECT a.*, ar.name AS artist_name
    FROM album a
    LEFT JOIN artist ar ON a.artist_id = ar.id
    WHERE title LIKE CONCAT('%', #{keyword}, '%')
    LIMIT #{index}, #{size}
  </select>

  <select id="searchCount" resultType="long" >
    SELECT COUNT(*)
    FROM album
    WHERE title LIKE CONCAT('%', #{keyword}, '%')
  </select>

</mapper>
