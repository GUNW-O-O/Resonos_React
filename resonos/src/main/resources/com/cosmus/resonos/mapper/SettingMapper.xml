<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cosmus.resonos.mapper.SettingMapper">

  <resultMap id="SettingResultMap" type="com.cosmus.resonos.domain.Setting">
    <id property="id" column="id"/>
    <result property="name" column="name"/>
    <result property="description" column="description"/>
    <result property="value" column="value"/>
    <result property="updatedAt" column="updated_at"/>
    <result property="createdAt" column="created_at"/>
  </resultMap>

  <select id="list" resultMap="SettingResultMap">
    SELECT id, name, description, value, updated_at, created_at FROM setting ORDER BY id 
  </select>

  <select id="select" resultMap="SettingResultMap">
    SELECT id, name, description, value, updated_at, created_at FROM setting WHERE id = #{id}
  </select>

  <insert id="insert">
    INSERT INTO setting (id, name, description, value, updated_at, created_at)
    VALUES (#{id}, #{name}, #{description}, #{value}, #{updatedAt}, #{createdAt})
  </insert>

  <update id="update">
    UPDATE setting
    SET description = #{description},
        value = #{value},
        updated_at = #{updatedAt}
    WHERE id = #{id}@PostMapping("/setting/add")
public String addSetting(
        @RequestParam("name") String name,
        @RequestParam(value = "description", required = false) String description,
        @RequestParam("value") String value,
        Model model) throws Exception {

    Setting setting = new Setting();
    setting.setName(name);
    setting.setValue(value);
    setting.setDescription(description);
    Date now = new Date();
    setting.setCreatedAt(now);
    setting.setUpdatedAt(now);

    settingService.insert(setting);

    return "redirect:/admin/PolicySetting";
}

  </update>

  <delete id="delete">
    DELETE FROM setting WHERE id = #{id}
  </delete>

</mapper>
